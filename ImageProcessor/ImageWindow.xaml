<Window x:Class="ImageProcessor.ImageWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:ImageProcessor.Converters"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="Modificar imagen" WindowState="Maximized"
        DataContext="{Binding ImageWindowViewModel,Source={StaticResource vmLocator}}">
    <Window.Resources>
        <converters:DoubleArrayToColorConverter x:Key="DoubleArrayToColorConverter"/>
        <converters:DoubleToPercentConverter x:Key="DoubleToPercentConverter"/>
        <converters:DoubleArrayToRGBConverter x:Key="DoubleArrayToRGBConverter"/>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <Grid  x:Name="gridMain">
            <Image x:Name="img" RenderTransformOrigin="0.5,0.5" Margin="10" Source="{Binding Bitmap,Mode=TwoWay}"
                   MouseLeftButtonDown="Grid_MouseLeftButtonDown" MouseLeftButtonUp="Grid_MouseLeftButtonUp" MouseMove="Grid_MouseMove" MouseWheel="img_MouseWheel">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform  ScaleX="{Binding ElementName=sliderZoom,Path=Value}" ScaleY="{Binding ElementName=sliderZoom,Path=Value}"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
            </Image>

          
        </Grid>

        <Border Grid.Column="1" Background="{StaticResource BackGroundAccentColor}" CornerRadius="10,0,0,10" >
            
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="65"/>
                </Grid.RowDefinitions>
                <Border CornerRadius="10,0,0,0" Background="{StaticResource BackGroundColor}">
                    <ScrollViewer VerticalScrollBarVisibility="Visible"  >
                        <Grid Margin="10" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition  Height="120"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition  Height="120"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition  Height="180"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                            <TextBlock Text="K-Means" Style="{StaticResource TextBlockTitle}" Margin="0,0,-10,0"/>
                            <Grid  Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="10"/>
                                 </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Clústers" Style="{StaticResource TextBlockOption}"/>
                                <TextBlock Text="Distancia" Style="{StaticResource TextBlockOption}" Grid.Column="1"/>
                                <TextBlock Text="Tolerancia" Style="{StaticResource TextBlockOption}" Grid.Column="2"/>
                                <TextBox Text="{Binding ClustersKMeans,Mode=TwoWay}" Grid.Row="1" VerticalAlignment="Top" Margin="10,0,10,0"/>
                                <ComboBox ItemsSource="{Binding TypeDistanceKMeans}" SelectedItem="{Binding TypeDistanceSelectedKMeans,Mode=TwoWay}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top"/>
                                <TextBox Text="{Binding ToleranceKMeans,Mode=TwoWay}" Grid.Row="1" VerticalAlignment="Top" Margin="10,0,10,0" Grid.Column="2"/>
                                <Button x:Name="btnCalcKMeans" Command="{Binding KMeansCommand}" Style="{StaticResource ButtonStyleNext}" Content="Calcular" Grid.Row="2" Grid.Column="2"/>
                                <Rectangle Grid.ColumnSpan="3" VerticalAlignment="Bottom" Grid.Row="3" Height="1" Fill="White"/>
                             </Grid>
                            <TextBlock Text="K-Modes" Grid.Row="2" Style="{StaticResource TextBlockTitle}" Margin="0,5,-10,0"/>
                            <Grid  Grid.Row="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="10"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Clústers" Style="{StaticResource TextBlockOption}"/>
                                <TextBlock Text="Tolerancia" Style="{StaticResource TextBlockOption}" Grid.Column="2"/>
                                <TextBox Text="{Binding ClustersKModes,Mode=TwoWay}" Grid.Row="1" VerticalAlignment="Top" Margin="10,0,10,0"/>
                                <TextBox Text="{Binding ToleranceKmodes,Mode=TwoWay}" Grid.Row="1" VerticalAlignment="Top" Margin="10,0,10,0" Grid.Column="2"/>
                                <Button Command="{Binding KModesCommand}" Style="{StaticResource ButtonStyleNext}" Content="Calcular" Grid.Row="2" Grid.Column="2" 
                                        HorizontalAlignment="Right" Width="{Binding ElementName=btnCalcKMeans,Path=ActualWidth}"/>
                                <Rectangle Grid.ColumnSpan="3" VerticalAlignment="Bottom" Grid.Row="3" Height="1" Fill="White"/>
                            </Grid>
                            <TextBlock Text="MeanShift" Grid.Row="4" Style="{StaticResource TextBlockTitle}" Margin="0,5,-10,0"/>
                            <Grid  Grid.Row="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="8"/>

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="10,10,10,0" Text="Kernel"  Style="{StaticResource TextBlockOption}"/>
                                <TextBlock Margin="10,10,10,0" Text="Ancho" Style="{StaticResource TextBlockOption}" Grid.Column="1"/>
                                <TextBlock Margin="10,10,10,0" Text="Sigma" Style="{StaticResource TextBlockOption}" Grid.Column="2"/>
                                <ComboBox ItemsSource="{Binding TypeKernelMeanS}" SelectedItem="{Binding TypeKernelSelectedMeanS,Mode=TwoWay}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Top"/>
                                <TextBox Text="{Binding ConstKernelMeanS,Mode=TwoWay}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" Margin="10,0,10,0"/>
                                <TextBox Text="{Binding SigmaMeanS,Mode=TwoWay}" Grid.Row="1" Grid.Column="2" VerticalAlignment="Top" Margin="10,0,10,0"/>
                                <TextBlock Margin="10,10,10,0" Text="Tolerancia"  Style="{StaticResource TextBlockOption}" Grid.Row="2" Grid.Column="0"/>
                                <TextBlock Margin="10,10,10,0" Text="Máx. iteraciones" Style="{StaticResource TextBlockOption}" Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="1"/>
                                <TextBox Text="{Binding ToleranceMeanS,Mode=TwoWay}" Grid.Row="3" Grid.Column="0" VerticalAlignment="Top" Margin="10,0,10,0"/>
                                <TextBox Text="{Binding IterationsMeanS,Mode=TwoWay}" Grid.Row="3" Grid.Column="1"  Grid.ColumnSpan="2"  VerticalAlignment="Top" Margin="10,0,10,0"/>
                                <Button Command="{Binding MeanShiftCommand}" Style="{StaticResource ButtonStyleNext}" Content="Calcular" Grid.Row="4" Grid.Column="2" 
                                HorizontalAlignment="Right" Width="{Binding ElementName=btnCalcKMeans,Path=ActualWidth}"/>
                                <Rectangle Grid.ColumnSpan="3" VerticalAlignment="Bottom" Grid.Row="5"  Height="1" Fill="White"/>
 
                            </Grid>
                        </Grid>
                    </ScrollViewer>
                </Border>
                <StackPanel Grid.Row="1" VerticalAlignment="Bottom" Margin="10">
                    <TextBlock Style="{StaticResource TextBlockOption}">
                                <Run Text="Zoom x"/><Run Text="{Binding ElementName=sliderZoom,Path=Value}"/>
                    </TextBlock>
                    <Slider Grid.Column="1"  VerticalAlignment="Center" x:Name="sliderZoom" Minimum="1" Maximum="30"  IsSnapToTickEnabled="True" ValueChanged="sliderZoom_ValueChanged"/>
                </StackPanel>
            </Grid>
       

        </Border>


        <Grid Background="{StaticResource FloatingWindow}" Grid.ColumnSpan="3" Visibility="{Binding VisibilityProcessedBitmap}">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" 
                           Style="{StaticResource TextBlockOption}">
                    <Run Text="Cálculo"/>
                    <Run Text="{Binding Status}"/>
            </TextBlock>

            <Button Grid.Column="1" Command="{Binding VisibilityProcessedImageCommand}" Style="{StaticResource stlFlatButton}"
                        Grid.Row="0" Margin="10" HorizontalAlignment="Right"  ToolTip="Cerrar imagen">
                <Image Source="/Images/MainWindow/Close.png" Height="25"/>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseEnter" >
                        <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave" >
                        <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Command="{Binding SaveImageCommand}" Style="{StaticResource stlFlatButton}"
                        Grid.Column="1" Margin="40,0" HorizontalAlignment="Right" ToolTip="Guardar imagen">
                <Image Source="/Images/MainWindow/Save.png" Height="22"/>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseEnter" >
                        <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave" >
                        <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Image Grid.Row="1" Grid.Column="0"  Margin="5,0,5,20" Source="{Binding BitmapProcessed}"/>
            
            <Border Width="250" Grid.Row="1" Grid.Column="1" Background="{StaticResource FloatingWindow}"
                     CornerRadius="10" Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition  Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Colores segmentados" Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <ListBox Grid.Row="1" ItemsSource="{Binding ProportionsResult}" Background="Transparent" BorderBrush="Transparent" Margin="10,0,10,10">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="100" />
                                    </Grid.ColumnDefinitions>
                                     <Border CornerRadius="10"  x:Name="colorPicker" Height="50" Width="50" ToolTip="Pulsa para cambiar el color"
                                       Background="{Binding Colors,Converter={StaticResource DoubleArrayToColorConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDown" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.ChangeColorCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                               CommandParameter="{Binding ElementName=colorPicker,Path=Background}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseEnter" >
                                                <i:InvokeCommandAction Command="{Binding DataContext.MouseEnterCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeave" >
                                                <i:InvokeCommandAction  Command="{Binding DataContext.MouseLeaveCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Border>
                                     <StackPanel  Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Proportion,Converter={StaticResource DoubleToPercentConverter}}" Foreground="White" FontSize="16"/>
                                        <TextBlock Text="{Binding Colors,Converter={StaticResource DoubleArrayToRGBConverter}}" Foreground="White"/>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>

        </Grid>
    </Grid>
</Window>

<Window x:Name="window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Custom="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon" 
        x:Class="ImageProcessor.ProcessWindow"
        xmlns:converters="clr-namespace:ImageProcessor.Converters"
        xmlns:ns="clr-namespace:ImageProcessor.Resources"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
         Title="Procesador imágenes" WindowState="Maximized"
        DataContext="{Binding ProcessWindowViewModel,Source={StaticResource vmLocator}}" Width="1489.5">
    <Window.Resources>
        <converters:DoubleArrayToColorConverter x:Key="DoubleArrayToColorConverter"/>
        <converters:DoubleToPercentConverter x:Key="DoubleToPercentConverter"/>
        <converters:DoubleArrayToRGBConverter x:Key="DoubleArrayToRGBConverter"/>
        <converters:StringToSourceImageConverter x:Key="StringToSourceImageConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Custom:Ribbon Grid.Row="0" VerticalAlignment="Top" MouseOverBorderBrush="#FFB9C9DA" IsMinimized="False" Background="#FFDFE9F4">
            <Custom:Ribbon.ApplicationMenu>

                <Custom:RibbonApplicationMenu	SmallImageSource="Images/ProcessWindow/Document.png">
                    <Custom:RibbonApplicationMenuItem Command="{Binding ReturnWindowCommand}" CommandParameter="{Binding ElementName=window}"
						ImageSource="Images/ProcessWindow/Arrow.png" Header="Volver a ventana inicial"/>
                    <Custom:RibbonApplicationMenuItem 
						  Header="Acerca de" ImageSource="Images/ProcessWindow/About.png">
                        <Custom:RibbonApplicationMenuItem Header="Contacto" Command="{Binding VisibilityContactCommand}" ImageSource="/Images/ProcessWindow/Mail.png"/>
                        <Custom:RibbonApplicationMenuItem Header="Sugerencias" Command="{Binding VisibilityQuizCommand}" ImageSource="/Images/ProcessWindow/Suggestions.png"/> 
                    </Custom:RibbonApplicationMenuItem>
                    <Custom:RibbonApplicationMenuItem 
						ImageSource="Images/ProcessWindow/Help.png" Header="Ayuda" Command="{Binding OpenNotepadCommand}" CommandParameter="MANUAL.pdf"/>
                    <Custom:RibbonApplicationMenuItem 
						ImageSource="Images/ProcessWindow/Close.png" Header="Salir" Command="{Binding CloseCommand}"/>
                              
                    <Custom:RibbonApplicationMenu.AuxiliaryPaneContent>
                        <StackPanel>
                            <TextBlock Margin="5,5,5,2" Text="Referencias externas" FontSize="16" FontWeight="Bold" />
                            <ListBox Margin="5,0,5,5" HorizontalContentAlignment="Stretch" x:Name="listboxReferences" Background="Transparent" BorderBrush="Transparent" ItemsSource="{Binding ListExternResources}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock x:Name="txtResource" Text="{Binding Title}" ToolTip="Abrir web">
                                                 <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseDown" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.BrowserCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                                   CommandParameter="{Binding ElementName=txtResource,Path=Text}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseEnter" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.MouseEnterCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseLeave" >
                                                    <i:InvokeCommandAction  Command="{Binding DataContext.MouseLeaveCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </Custom:RibbonApplicationMenu.AuxiliaryPaneContent>

                 
                </Custom:RibbonApplicationMenu>
            </Custom:Ribbon.ApplicationMenu>


            
            <Custom:RibbonTab Header="Transformaciones">
                <Custom:RibbonGroup Header="Cálculos infrarrojo">
                    <Custom:RibbonButton Command="{Binding NDVINIRCommand}" 
                                         LargeImageSource="Images/ProcessWindow/NDVIicon.png" ToolTipImageSource="Images/ProcessWindow/NDVIicon.png"
                                         Label="NDVI" ToolTipTitle="Cálculo NDVI:" ToolTipDescription="Realiza el cálculo del índice de vegetación de diferencia normalizada. Su valor se obtiene => NDVI= (IRC - ROJO) / (IRC + ROJO)"/>

                    <Custom:RibbonButton Command="{Binding VINIRCommand}" 
                                         LargeImageSource="Images/ProcessWindow/VIIcon.png" ToolTipImageSource="Images/ProcessWindow/VIIcon.png"
                                        Label="VI" ToolTipTitle="Cálculo VI:" ToolTipDescription="Realiza el cálculo del VI. Su valor se obtiene => VI= (IRC / ROJO)"/>

                    <Custom:RibbonButton Command="{Binding WithoutIRCommand}"
                                         LargeImageSource="Images/ProcessWindow/ImageIcon.png"  ToolTipImageSource="Images/ProcessWindow/ImageIcon.png"
                                         Label="Imagen" ToolTipTitle="Sin transformación:" ToolTipDescription="Muestra la imagen infrarroja sin alterar su composición"/>
                </Custom:RibbonGroup>
                <Custom:RibbonGroup  Header="Cálculos dos imágenes">
                    <Custom:RibbonButton Command="{Binding NDVICommand}"
                                        LargeImageSource="Images/ProcessWindow/NDVIicon.png" ToolTipImageSource="Images/ProcessWindow/NDVIicon.png"
                                        Label="NDVI" ToolTipTitle="Cálculo NDVI:" ToolTipDescription="Realiza el cálculo del índice de vegetación de diferencia normalizada. Su valor se obtiene => NDVI= (IRC - ROJO) / (IRC + ROJO).&#x0d;El valor ROJO se obtiene de la imagen original"/>

                    <Custom:RibbonButton Command="{Binding VICommand}"
                                         LargeImageSource="Images/ProcessWindow/VIIcon.png" ToolTipImageSource="Images/ProcessWindow/VIIcon.png"
                                         Label="VI" ToolTipTitle="Cálculo VI:" ToolTipDescription="Realiza el cálculo del VI. Su valor se obtiene => VI= (IRC / ROJO).&#x0d;El valor ROJO se obtiene de la imagen original"/>
                </Custom:RibbonGroup>
                <Custom:RibbonGroup  Header="Propiedades">
                    <Custom:RibbonButton Command="{Binding VisibilityOptionsRampNDVICommand}"
                                         SmallImageSource="Images/ProcessWindow/RampNDVI.png" ToolTipImageSource="Images/ProcessWindow/RampNDVI.png"
                                        Label="Rampa de colores NDVI" ToolTipTitle="Rampa de colores NDVI:" ToolTipDescription="Cambia la rampa de colores en la que se mostrarán las transformaciones NDVI"/>
                    <Custom:RibbonButton Command="{Binding VisibilityOptionsRampVICommand}"
                                         SmallImageSource="Images/ProcessWindow/RampVI.png" ToolTipImageSource="Images/ProcessWindow/RampVI.png"
                                        Label="Rampa de colores VI" ToolTipTitle="Rampa de colores VI:" ToolTipDescription="Cambia la rampa de colores en la que se mostrarán las transformaciones VI"/>
                    <Custom:RibbonButton Command="{Binding VisibilityOptionsSegmentationCommand}"
                                         SmallImageSource="Images/ProcessWindow/SegmentationIcon.png" ToolTipImageSource="Images/ProcessWindow/SegmentationIcon.png"
                                        Label="Tipo de segmentación" ToolTipTitle="Tipo de segmentación:" ToolTipDescription="Muestra las diferentes opciones para poder segmentar la imagen"/>
                </Custom:RibbonGroup>
            </Custom:RibbonTab>


            <Custom:RibbonTab Header="Segmentación">
                <Custom:RibbonGroup  Header="Imagen infrarroja">
                    <Custom:RibbonButton Margin="10,0,0,0" Command="{Binding SegmentationBandsIRCommand}"
                                         LargeImageSource="Images/ProcessWindow/SegmentationIR.png" ToolTipImageSource="Images/ProcessWindow/SegmentationIR.png"
                                          Label="Segmentar" ToolTipTitle="Segmentar imagen infrarroja:" ToolTipDescription="Divide la imagen en los clústers seleccionados en función de la distribución seleccionada"/>
                </Custom:RibbonGroup>
                <Custom:RibbonGroup  Header="Imagen original">
                    <Custom:RibbonButton Margin="7,0,0,0" Command="{Binding SegmentationBandsCommand}"
                                         LargeImageSource="Images/ProcessWindow/Segmentation.png" ToolTipImageSource="Images/ProcessWindow/Segmentation.png"
                                          Label="Segmentar" ToolTipTitle="Segmentar imagen original:" ToolTipDescription="Divide la imagen en los clústers seleccionados en función de la distribución seleccionada"/>
                </Custom:RibbonGroup>

                <Custom:RibbonGroup  Header="Canales incluidos">
                    <Custom:RibbonCheckBox IsChecked="{Binding Channel1Segmentation,Mode=TwoWay}" Label="Canal 1" Margin="10,0,0,0"
                                           ToolTipTitle="Canal 1:" ToolTipDescription="*Corresponde al canal VERDE en la imagen infrarroja
                                           *Corresponde al canal AZUL en la imagen original"/>
                    <Custom:RibbonCheckBox IsChecked="{Binding Channel2Segmentation,Mode=TwoWay}" Label="Canal 2" Margin="10,0,0,0"
                                           ToolTipTitle="Canal 2:" ToolTipDescription="*Corresponde al canal ROJO en la imagen infrarroja
                                           *Corresponde al canal VERDE en la imagen original"/>
                    <Custom:RibbonCheckBox IsChecked="{Binding Channel3Segmentation,Mode=TwoWay}" Label="Canal 3" Margin="10,0,0,0"
                                           ToolTipTitle="Canal 3:" ToolTipDescription="*Corresponde al canal INFRARROJO en la imagen infrarroja
                                           *Corresponde al canal ROJO en la imagen original"/>
                </Custom:RibbonGroup>
                <Custom:RibbonGroup Width="370"  Header="Tipo de segmentación">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="65"/>
                            <ColumnDefinition Width="50"/>

                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Text="Tipo de segmentación"/>
                        <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding TypeSegmentationSg}" SelectedItem="{Binding TypeSegmentationSgSelected,Mode=TwoWay}" Height="25" Margin="5,0,0,0"/>
                        <TextBlock Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="0" Text="Tipo de distancia"/>
                        <ComboBox  Grid.Row="1" Grid.Column="1"  ItemsSource="{Binding TypeDistanceSegmentation}" IsEnabled="{Binding EnabledDistanceSegmentation}" SelectedItem="{Binding TypeDistanceSegmentationSelected,Mode=TwoWay}" Height="25" Margin="5,0,0,0"/>

                        <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Right" Text="Clústers"/>
                        <TextBox Grid.Column="3" Grid.Row="0" Text="{Binding ClustersSegmentation,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding EnabledClusterSegmentation}" VerticalAlignment="Center" Height="25" Margin="5,0,0,0"/>
                        <TextBlock Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right" Text="Tolerancia"/>
                        <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding ToleranceSegmentation,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding EnabledToleranceSegmentation}" VerticalAlignment="Center" Height="25" Margin="5,0,0,0"/>

                    </Grid>
                </Custom:RibbonGroup>
            </Custom:RibbonTab>

            <Custom:RibbonTab Header="Segmentación múltiple">
                <Custom:RibbonGroup  Header="Imagen infrarroja">
                    <Custom:RibbonButton Margin="10,0,0,0" Command="{Binding SegmentationMultipleBandsCommand}"
                                         LargeImageSource="Images/ProcessWindow/SegmentationIR.png" ToolTipImageSource="Images/ProcessWindow/SegmentationIR.png"
                                          Label="Segmentar" ToolTipTitle="Segmentar imagen:" ToolTipDescription="Divide la imagen en los clústers seleccionados en función de los canales seleccionados"/>
                </Custom:RibbonGroup>



                <Custom:RibbonGroup  Header="Canales incluidos">
                    <Custom:RibbonCheckBox IsChecked="{Binding Channel1MultipleSelected,Mode=TwoWay}" Label="Canal verde - infrarrojo" Margin="10,0,0,0"/>
                    <Custom:RibbonCheckBox IsChecked="{Binding Channel2MultipleSelected,Mode=TwoWay}" Label="Canal rojo - infrarrojo" Margin="10,0,0,0"/>
                    <Custom:RibbonCheckBox IsChecked="{Binding Channel3MultipleSelected,Mode=TwoWay}" Label="Canal infrarrojo - infrarrojo" Margin="10,0,0,0"/>

                    <Custom:RibbonCheckBox IsChecked="{Binding Channel4MultipleSelected,Mode=TwoWay}" Label="Canal azul - original" Margin="10,0,0,0"/>
                    <Custom:RibbonCheckBox IsChecked="{Binding Channel5MultipleSelected,Mode=TwoWay}" Label="Canal verde - original" Margin="10,0,0,0"/>
                    <Custom:RibbonCheckBox IsChecked="{Binding Channel6MultipleSelected,Mode=TwoWay}" Label="Canal rojo - original" Margin="10,0,0,0"/>
                </Custom:RibbonGroup>

                <Custom:RibbonGroup  Header="Canales de salida">
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Azul" VerticalAlignment="Center" HorizontalAlignment="Right" Width="30" Margin="0,0,5,0"/>
                            <ComboBox  ItemsSource="{Binding ListChanelsReturn}" DisplayMemberPath="Name" SelectedItem="{Binding Channel1ReturnSelected,Mode=TwoWay}" Width="120"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <TextBlock Text="Verde" VerticalAlignment="Center" HorizontalAlignment="Right" Width="30" Margin="0,0,5,0"/>
                            <ComboBox ItemsSource="{Binding ListChanelsReturn}" DisplayMemberPath="Name" SelectedItem="{Binding Channel2ReturnSelected,Mode=TwoWay}" Width="120"/>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Orientation="Horizontal">
                            <TextBlock Text="Rojo" VerticalAlignment="Center" HorizontalAlignment="Right" Width="30" Margin="0,0,5,0"/>
                            <ComboBox ItemsSource="{Binding ListChanelsReturn}" DisplayMemberPath="Name" SelectedItem="{Binding Channel3ReturnSelected,Mode=TwoWay}" Width="120"/>
                        </StackPanel>
                    </Grid>
                </Custom:RibbonGroup>
                <Custom:RibbonGroup Width="370"  Header="Tipo de segmentación">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="65"/>
                            <ColumnDefinition Width="50"/>

                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Text="Tipo de segmentación"/>
                        <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding TypeSegmentationSg}" SelectedItem="{Binding TypeSegmentationSgSelected,Mode=TwoWay}" Height="25" Margin="5,0,0,0"/>
                        <TextBlock Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="0" Text="Tipo de distancia"/>
                        <ComboBox  Grid.Row="1" Grid.Column="1"  ItemsSource="{Binding TypeDistanceSegmentation}" IsEnabled="{Binding EnabledDistanceSegmentation}" SelectedItem="{Binding TypeDistanceSegmentationSelected,Mode=TwoWay}" Height="25" Margin="5,0,0,0"/>

                        <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Right" Text="Clústers"/>
                        <TextBox Grid.Column="3" Grid.Row="0" Text="{Binding ClustersSegmentation,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding EnabledClusterSegmentation}" VerticalAlignment="Center" Height="25" Margin="5,0,0,0"/>
                        <TextBlock Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right" Text="Tolerancia"/>
                        <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding ToleranceSegmentation,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding EnabledToleranceSegmentation}" VerticalAlignment="Center" Height="25" Margin="5,0,0,0"/>

                    </Grid>
                </Custom:RibbonGroup>
            </Custom:RibbonTab>


            <Custom:RibbonTab Header="Más">
                <Custom:RibbonGroup  Header="Propiedades" Margin="0,10,0,0">
                    <Custom:RibbonButton Command="{Binding ExchangeImagesCommand}"
                                         SmallImageSource="Images/ProcessWindow/ExchangeIcon.png" ToolTipImageSource="Images/ProcessWindow/ExchangeIcon.png"
                                         Label="Intercambiar imágenes" ToolTipTitle="Intercambiar imágenes:" ToolTipDescription="La imagen original pasa a ser imagen infrarrojo y viceversa"/>
                    <Custom:RibbonButton Command="{Binding VisibilityAlterBandsCommand}"
                                         SmallImageSource="Images/ProcessWindow/ExchangeIcon.png" ToolTipImageSource="Images/ProcessWindow/ExchangeIcon.png"
                                         Label="Cambiar orden bandas" ToolTipTitle="Cambiar orden de bandas:" ToolTipDescription="Alterna las diferentes bandas de la imagen para alterar su orden de procesado"/>
                </Custom:RibbonGroup>
            </Custom:RibbonTab>

        </Custom:Ribbon>

        <Grid Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image x:Name="imgOriginal" Grid.Column="0" Margin="5" Source="{Binding BitmapOriginal,Mode=TwoWay}" />
            <TextBlock Text="Imagen original" Grid.Column="0" Margin="10" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontSize="18"/>

            <GridSplitter Grid.Column="1"  Width="5" HorizontalAlignment="Stretch" Background="#FFDFE9F4" />
            <Image x:Name="imgIRC" Grid.Column="2"  Margin="5" Source="{Binding BitmapNIR,Mode=TwoWay}"/>
            <TextBlock Text="Imagen infrarrojo" Grid.Column="2" Margin="10" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontSize="18"/>

            <Border CornerRadius="10" Background="{StaticResource FloatingWindow}" Height="240"  Margin="30,-50,30,30" Width="550" Grid.ColumnSpan="3" Visibility="{Binding VisibilityAlterBands}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.ColumnSpan="2"  Text="Imagen original"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Margin="0"/>
                    <TextBlock Grid.ColumnSpan="2"  Text="Imagen infrarrojo"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Grid.Column="2"  Margin="0"/>

                    <Button Command="{Binding VisibilityAlterBandsCommand}" Style="{StaticResource stlFlatButton}"
                         HorizontalAlignment="Right" ToolTip="Cerrar" Grid.Column="4">
                        <Image Source="/Images/MainWindow/Close.png" Height="25"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <TextBlock Text="Banda 1"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Grid.Row="2"/>
                    <TextBlock Text="Banda 2" Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Grid.Row="3" />
                    <TextBlock Text="Banda 3" Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Grid.Row="4"/>
                    <TextBlock Text="Banda 4" Style="{StaticResource TextBlockOption}" VerticalAlignment="Center"  Grid.Row="5"/>
                    <TextBlock Text="Banda 1"  Style="{StaticResource TextBlockOption}" Grid.Column="2"  VerticalAlignment="Center" Grid.Row="2"/>
                    <TextBlock Text="Banda 2" Style="{StaticResource TextBlockOption}" Grid.Column="2" VerticalAlignment="Center" Grid.Row="3" />
                    <TextBlock Text="Banda 3" Style="{StaticResource TextBlockOption}" Grid.Column="2" VerticalAlignment="Center" Grid.Row="4"/>
                    <TextBlock Text="Banda 4" Style="{StaticResource TextBlockOption}" Grid.Column="2" VerticalAlignment="Center"  Grid.Row="5"/>

                    <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding TypeAlterBands}" SelectedItem="{Binding SelectedTypeAlter10,Mode=TwoWay}" Height="25"/>
                    <ComboBox Grid.Column="1" Grid.Row="3" ItemsSource="{Binding TypeAlterBands}" SelectedItem="{Binding SelectedTypeAlter11,Mode=TwoWay}" Height="25"/>
                    <ComboBox Grid.Column="1" Grid.Row="4" ItemsSource="{Binding TypeAlterBands}" SelectedItem="{Binding SelectedTypeAlter12,Mode=TwoWay}" Height="25"/>
                    <ComboBox Grid.Column="1" Grid.Row="5" ItemsSource="{Binding TypeAlterBands}" SelectedItem="{Binding SelectedTypeAlter13,Mode=TwoWay}" Height="25"/>

                    <ComboBox Grid.Column="3" Grid.Row="2" ItemsSource="{Binding TypeAlterBands}" SelectedItem="{Binding SelectedTypeAlter20,Mode=TwoWay}" Height="25"/>
                    <ComboBox Grid.Column="3" Grid.Row="3" ItemsSource="{Binding TypeAlterBands}" SelectedItem="{Binding SelectedTypeAlter21,Mode=TwoWay}" Height="25"/>
                    <ComboBox Grid.Column="3" Grid.Row="4" ItemsSource="{Binding TypeAlterBands}" SelectedItem="{Binding SelectedTypeAlter22,Mode=TwoWay}" Height="25"/>
                    <ComboBox Grid.Column="3" Grid.Row="5" ItemsSource="{Binding TypeAlterBands}" SelectedItem="{Binding SelectedTypeAlter23,Mode=TwoWay}" Height="25"/>

                    <Button Command="{Binding AlterBandsCommand}" Content="Aplicar" Width="65" Grid.Row="6" HorizontalAlignment="Right" Grid.Column="1"/>
                    <Button Content="Aplicar" Command="{Binding AlterBandsIRCommand}" Width="65" Grid.Row="6" HorizontalAlignment="Right" Grid.Column="3"/>
                </Grid>
            </Border>
            
            <Grid Background="{StaticResource FloatingWindow}" Grid.ColumnSpan="3" Visibility="{Binding VisibilityProcessedBitmap}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="40"/>

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{Binding WidthProportionsResults}"/>
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" 
                           Style="{StaticResource TextBlockOption}">
                    <Run Text="Cálculo"/>
                    <Run Text="{Binding Status}"/>
                </TextBlock>
                
                <Button Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding VisibilityProcessedImageCommand}" Style="{StaticResource stlFlatButton}"
                        Grid.Row="0" Margin="10" HorizontalAlignment="Right" ToolTip="Cerrar imagen">
                    <Image Source="/Images/MainWindow/Close.png" Height="25"/>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter" >
                            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave" >
                            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding SaveImageCommand}" Style="{StaticResource stlFlatButton}"
                        Grid.Row="0" Margin="40,0" HorizontalAlignment="Right" ToolTip="Guardar imagen">
                    <Image Source="/Images/MainWindow/Save.png" Height="22"/>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter" >
                            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave" >
                            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding SetOriginalImageCommand}" Style="{StaticResource stlFlatButton}"
                        Grid.Row="0" Margin="110,0" HorizontalAlignment="Right" ToolTip="Establecer como imagen original">
                    <Image Source="/Images/ProcessWindow/SetImage.png" Height="25"/>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter" >
                            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave" >
                            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding SetIRImageCommand}" Style="{StaticResource stlFlatButton}"
                        Grid.Row="0" Margin="80,0" HorizontalAlignment="Right" ToolTip="Establecer como imagen infrarrojo">
                    <Image Source="/Images/ProcessWindow/SetImageIR.png" Height="25"/>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter" >
                            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave" >
                            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                
                
                <Image Grid.Row="1"  Margin="5,0,5,20" Source="{Binding BitmapProcessed}"
                        ToolTip="Pulsa para abrir en nueva ventana" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown" >
                            <i:InvokeCommandAction Command="{Binding ExpandImageCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseEnter" >
                            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave" >
                            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="2">
                    <TextBlock Style="{StaticResource TextBlockOption}">
                        <Run Text="Low:"/>
                        <Run Text="{Binding MinimumRamp}"/>
                    </TextBlock>
                    <Image Width="150" Source="{Binding RampSelected.ImageRamp,Converter={StaticResource StringToSourceImageConverter}}"/>
                    <TextBlock Style="{StaticResource TextBlockOption}">
                         <Run Text="High:"/>
                        <Run Text="{Binding MaximunRamp}"/>
                    </TextBlock>

                </StackPanel>
                <Border Width="250" Grid.Column="1" Grid.RowSpan="2"  Background="{StaticResource FloatingWindow}"
                     CornerRadius="10" Margin="10,50,10,10" Visibility="{Binding VisibilityProportionsResults}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition  Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Colores segmentados" Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <ListBox Grid.Row="1" ItemsSource="{Binding ProportionsResult}" Background="Transparent" BorderBrush="Transparent" Margin="10,0,10,10">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="100" />
                                        </Grid.ColumnDefinitions>
                                        <Border CornerRadius="10"  x:Name="colorPicker" Height="50" Width="50" ToolTip="Pulsa para cambiar el color"
                                       Background="{Binding Colors,Converter={StaticResource DoubleArrayToColorConverter}}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseDown" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ChangeColorCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                               CommandParameter="{Binding ElementName=colorPicker,Path=Background}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseEnter" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.MouseEnterCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseLeave" >
                                                    <i:InvokeCommandAction  Command="{Binding DataContext.MouseLeaveCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Border>
                                        <StackPanel  Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding Proportion,Converter={StaticResource DoubleToPercentConverter}}" Foreground="White" FontSize="16"/>
                                            <TextBlock Text="{Binding Colors,Converter={StaticResource DoubleArrayToRGBConverter}}" Foreground="White"/>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Border>
            </Grid>

            <Border CornerRadius="10" Background="{StaticResource FloatingWindow}" Width="250" Height="200"
                   VerticalAlignment="Top" Margin="30" Grid.ColumnSpan="3" Visibility="{Binding VisibilityOptionsSegmentation}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>

                    </Grid.RowDefinitions>
                    <TextBlock Text="Tipo de segmentación"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Margin="0" Grid.ColumnSpan="2"/>

                    <Button Command="{Binding VisibilityOptionsSegmentationCommand}" Style="{StaticResource stlFlatButton}"
                         HorizontalAlignment="Right" ToolTip="Cerrar" Grid.Column="1">
                        <Image Source="/Images/MainWindow/Close.png" Height="25"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <ComboBox Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding TypeSegmentation}" SelectedItem="{Binding TypeSegmentationSelected,Mode=TwoWay}" Height="25"/>
                    <TextBlock Text="Clústers"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Grid.Row="2"/>
                    <TextBlock Text="Tolerancia" Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Grid.Row="3" />
                    <TextBlock Text="Distancia" Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Grid.Column="0" Grid.Row="4"/>
                    <TextBox Text="{Binding Tolerance,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding EnabledTolerance}" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Height="25"/>
                    <TextBox Text="{Binding Clusters,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding EnabledCluster}" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Height="25"/>
                    <ComboBox  ItemsSource="{Binding TypeDistance}" IsEnabled="{Binding EnabledDistance}" SelectedItem="{Binding TypeDistanceSelected,Mode=TwoWay}" Grid.Row="4" Grid.Column="1" Height="25"/>
                </Grid>

            </Border>

            <Border CornerRadius="10" Background="{StaticResource FloatingWindow}" Width="250" Height="120"
                   VerticalAlignment="Top" Margin="30" Grid.ColumnSpan="3" Visibility="{Binding VisibilityOptionsRampNDVI}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Rampa de colores NDVI"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Margin="0" Grid.ColumnSpan="2"/>

                    <Button Command="{Binding VisibilityOptionsRampNDVICommand}" Style="{StaticResource stlFlatButton}"
                         HorizontalAlignment="Right" ToolTip="Cerrar" Grid.Column="1">
                        <Image Source="/Images/MainWindow/Close.png" Height="25"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <ComboBox Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding TypeRampNDVIColors}" DisplayMemberPath="Name"  SelectedItem="{Binding TypeRampNDVIColorsSelected,Mode=TwoWay}" Height="25"/>
                    <CheckBox Grid.Row="2" IsChecked="{Binding EnabledAdjustRampNDVI,Mode=TwoWay}" Grid.ColumnSpan="2" Content="Ajustar escala a valores" Foreground="White"/>
                </Grid>

            </Border>

            <Border CornerRadius="10" Background="{StaticResource FloatingWindow}" Width="250" Height="180"
                   VerticalAlignment="Top" Margin="30" Grid.ColumnSpan="3" Visibility="{Binding VisibilityOptionsRampVI}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Rampa de colores VI"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Margin="0" Grid.ColumnSpan="2"/>

                    <Button Command="{Binding VisibilityOptionsRampVICommand}" Style="{StaticResource stlFlatButton}"
                         HorizontalAlignment="Right" ToolTip="Cerrar" Grid.Column="1">
                        <Image Source="/Images/MainWindow/Close.png" Height="25"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <ComboBox Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding TypeRampVIColors}" DisplayMemberPath="Name"  SelectedItem="{Binding TypeRampVIColorsSelected,Mode=TwoWay}" Height="25"/>
                    <TextBlock Text="Ajuste de máximo VI" Grid.Row="2"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" Margin="0" Grid.ColumnSpan="2"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.ColumnSpan="2" >
                        <Slider x:Name="sliderAdjustment" Value="{Binding ValueAdjustmentVI}" Width="205"
                            Minimum="1" Maximum="255"  IsSnapToTickEnabled="True"/>
                        <TextBlock Foreground="White" Text="{Binding ElementName=sliderAdjustment,Path=Value}"/>
                    </StackPanel>

                    <CheckBox Grid.Row="4" IsChecked="{Binding EnabledAdjustRampVI,Mode=TwoWay}" Grid.ColumnSpan="2" Content="Ajustar escala a valores" Foreground="White"/>

                </Grid>

            </Border>

           
            <Border CornerRadius="10" Background="{StaticResource FloatingWindow}"  Margin="30" Width="550" Grid.ColumnSpan="3" Visibility="{Binding VisibilityQuiz}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Sugerencias"  Style="{StaticResource TextBlockOption}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.ColumnSpan="2"/>

                    <Button Command="{Binding VisibilityQuizCommand}" Style="{StaticResource stlFlatButton}" Grid.Column="1"
                         HorizontalAlignment="Right"  ToolTip="Cerrar">
                        <Image Source="/Images/MainWindow/Close.png" Height="25"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <WebBrowser Grid.ColumnSpan="2" Grid.Row="1"  ns:WebBrowserUtility.BindableSource="{Binding UrlQuiz}" LoadCompleted="WebBrowser_LoadCompleted" />

                </Grid>
            </Border>

            <Border CornerRadius="10" Background="{StaticResource FloatingWindow}"  Margin="0,20,0,0" VerticalAlignment="Top" Height="185" Width="305" Grid.ColumnSpan="3" Visibility="{Binding VisibilityContact}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                         
                    </Grid.RowDefinitions>
                    <TextBlock Text="Contacto"  Style="{StaticResource TextBlockTitle}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Grid.ColumnSpan="2"/>
                    <Button Command="{Binding VisibilityContactCommand}" Style="{StaticResource stlFlatButton}" Grid.Column="1"
                         HorizontalAlignment="Right"  ToolTip="Cerrar">
                        <Image Source="/Images/MainWindow/Close.png" Height="25"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    
                    <StackPanel Grid.Row="1" VerticalAlignment="Center" Background="Blue">
                        <TextBlock   Style="{StaticResource TextBlockOption}" HorizontalAlignment="Center" Text="Correo electrónico"/>
                        <TextBlock x:Name="txtEmail" Style="{StaticResource TextBlockSubOption}" Text="luis.m.r@outlook.com">
                           <i:Interaction.Triggers>
                                 <i:EventTrigger EventName="MouseDown" >
                                <i:InvokeCommandAction Command="{Binding OpenNotepadCommand}" CommandParameter="EMAIL.TXT"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        </TextBlock>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="1"  VerticalAlignment="Center" Background="{StaticResource BackGroundAccentColor}">
                        <TextBlock  Style="{StaticResource TextBlockOption}" HorizontalAlignment="Center" Text="Perfil"/>
                        <TextBlock x:Name="txtWeb" Style="{StaticResource TextBlockSubOption}"   Text="www.linkedin.com/in/luismarcosrivera">
                             <i:Interaction.Triggers>
                                 <i:EventTrigger EventName="MouseDown" >
                                <i:InvokeCommandAction Command="{Binding OpenURLCommand}" CommandParameter="{Binding ElementName=txtWeb,Path=Text}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Background="{StaticResource FloatingWindow}">
                        <TextBlock  Style="{StaticResource TextBlockOption}" HorizontalAlignment="Center" Text="Código fuente"/>
                        <TextBlock x:Name="txtGithub" Style="{StaticResource TextBlockSubOption}"   Text="github.com/LuisM000/">
                            <i:Interaction.Triggers>
                                 <i:EventTrigger EventName="MouseDown" >
                                <i:InvokeCommandAction Command="{Binding OpenURLCommand}" CommandParameter="https://www.github.com/LuisM000/ImageProccesor"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Background="Red">
                        <TextBlock  Style="{StaticResource TextBlockOption}" HorizontalAlignment="Center" Text="Licencia"/>
                        <TextBlock Style="{StaticResource TextBlockSubOption}"   Text="GNU General Public License">
                             <i:Interaction.Triggers>
                                 <i:EventTrigger EventName="MouseDown" >
                                <i:InvokeCommandAction Command="{Binding OpenNotepadCommand}" CommandParameter="COPYING.TXT"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseEnter" >
                                <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave" >
                                <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        </TextBlock>
                    </StackPanel>
                    <TextBlock Grid.ColumnSpan="2" Grid.Row="3" Style="{StaticResource TextBlockOption}" 
                               HorizontalAlignment="Center" Text="Copyright © 2015 Luis Marcos Rivera"/>
 
                </Grid>
            </Border>

          
        </Grid>
    </Grid>
</Window>
